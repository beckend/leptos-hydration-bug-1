[package]
name = 'this-app'
version = '0.1.0'
edition = '2021'
resolver = '2'

[lib]
crate-type = ['cdylib', 'rlib']

[dependencies]
axum = { version = '0.6.18', optional = true, features = [
  'headers',
  'http2',
  'macros',
  'multipart',
  'tracing',
] }
console_error_panic_hook = '0.1.7'
console_log = '1'
cfg-if = '1'
leptos = { features = [], version = '0.5.0-rc3' }
leptos_meta = { features = [], version = '0.5.0-rc3' }
leptos_axum = { optional = true, version = '0.5.0-rc3' }
leptos_router = { features = [], version = '0.5.0-rc3' }
log = '0.4.17'
simple_logger = '4'
sqlx = { version = '0.7.1', features = [
  'runtime-tokio',
  'postgres',
  'ipnetwork',
  'time',
  'uuid',
  'json',
  'migrate',
], optional = true }
tokio = { version = '1.28.1', optional = true }
tower = { version = '0.4.13', features = [
  'load-shed',
  'timeout',
  'limit',
  'load',
], optional = true }
tower-http = { version = '0.4.4', features = [
  'cors',
  'decompression-br',
  'tokio',
  'tracing',
  'trace',
  'limit',
  'compression-br',
  'fs',
  'compression-zstd',
  'decompression-zstd',
  'async-compression',
], optional = true }
wasm-bindgen = '0.2.84'
thiserror = '1.0.40'
tracing = { version = '0.1.37', optional = true, features = [
  'async-await',
  'log',
] }
http = '0.2.9'
strum = { version = '0.25.0', features = ['derive', 'strum_macros'] }
serde = { version = '1.0.188', features = ['derive'] }
time = { version = '0.3.28', features = [
  'formatting',
  'serde',
  'macros',
  'serde-well-known',
], optional = true }
anyhow = '1.0.75'
cowstr = { version = '1.2.0', features = ['serde'] }
config = '0.13.3'
kanal = '0.1.0-pre8'
notify = { version = '6.1.1', optional = true }
path-clean = { version = '1.0.1', optional = true }
async-trait = '0.1.73'
validator = '0.16.1'
utoipa = { version = '3.5.0', optional = true }
sea-orm = { version = '0.12.3', features = [
  'runtime-tokio',
  'sqlx-postgres',
], optional = true }
axum-server = { version = '0.5.1', optional = true, features = [
  'tokio-rustls',
  'tls-rustls',
] }
rustls = { version = '0.21.7', optional = true }
rustls-pemfile = { version = '1.0.3', optional = true }
blake3 = { version = '1.5.0', optional = true }
moka = { version = '0.12.0', features = [
  'async-trait',
  'async-lock',
  'future',
], optional = true }
autometrics = { version = '0.6.0', features = [
  'prometheus',
  'metrics-exporter-prometheus',
  'prometheus-exporter',
], optional = true }
url = { version = '2.4.1', optional = true }
tracing-subscriber = { version = '0.3.17', optional = true, features = [
  'env-filter',
  'local-time',
  'time',
] }
leptos_i18n = { version = '0.2.0-beta6', features = ['serde'] }
reqwest = { version = "0.11.20", features = ["json", "brotli", "wasm-streams"] }

[features]
hydrate = [
  'leptos/hydrate',
  'leptos_meta/hydrate',
  'leptos_router/hydrate',
  'leptos_i18n/hydrate',
]
ssr = [
  'dep:time',
  'dep:sqlx',
  'dep:rustls',
  'dep:rustls-pemfile',
  'dep:blake3',
  'dep:moka',
  'dep:autometrics',
  'dep:url',
  'dep:axum-server',
  'dep:axum',
  'dep:notify',
  'dep:path-clean',
  'dep:sea-orm',
  'dep:tokio',
  'dep:tower',
  'dep:tower-http',
  'dep:leptos_axum',
  'dep:utoipa',
  'leptos/ssr',
  'leptos_meta/ssr',
  'leptos_router/ssr',
  'leptos_i18n/axum',
  'dep:tracing',
  'dep:tracing-subscriber',
]
all = ['hydrate', 'ssr']

[package.metadata.leptos-i18n]
default = 'en'
locales = ['en']

[package.metadata.cargo-all-features]
denylist = ['axum', 'tokio', 'tower', 'tower-http', 'leptos_axum']
skip_feature_sets = [['ssr', 'hydrate']]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
# output-name = 'this-app'
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = 'target/site'
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = 'pkg'
style-file = 'styles/index.scss'
# Optional, Activates the tailwind build
tailwind-input-file = 'styles/_tailwind.css'

# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = 'public'
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = '127.0.0.1:3000'
# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use 'npx.cmd playwright test'
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = 'npx playwright test'
end2end-dir = 'end2end'

#  The browserlist query used for optimizing the CSS.
browserquery = 'defaults'

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either 'DEV' or 'PROD'
env = 'DEV'

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ['ssr']

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ['hydrate']

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
